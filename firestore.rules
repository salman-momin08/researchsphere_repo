
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      // Allow users to read their own profile if they are authenticated
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow users to create their own profile document if they are authenticated
      // and the document ID they are trying to create matches their UID.
      // This is crucial for social sign-up where the profile is created after auth.
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow users to update their own profile if they are authenticated
      // and the document ID matches their UID.
      // You might want to add more granular field-level validation here if needed
      // (e.g., request.resource.data.email == resource.data.email to prevent email changes).
      allow update: if request.auth != null && request.auth.uid == userId;

      // Generally, do not allow users to delete their own profile directly via client SDK for safety.
      // Handle deletions via a backend function (e.g., Firebase Cloud Function) or an admin process if needed.
      allow delete: if false; // Or specific admin role check: request.auth.token.admin == true
    }

    // Papers collection (example, adjust to your needs)
    match /papers/{paperId} {
      // Allow authenticated users to read papers (adjust if public access is needed)
      allow read: if request.auth != null; // Or allow read: if true; for public papers

      // Allow authenticated users to create papers if the paper's userId matches their UID
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      // Allow users to update their own papers
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;

      // Allow users to delete their own papers
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;

      // Potentially add admin override for papers
      // allow read, write: if request.auth != null && request.auth.token.admin == true;
    }

    // Add rules for other collections as needed following similar principles.
  }
}
