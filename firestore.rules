
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // USERS collection
    // Users can create their own document upon signup.
    // Users can read, update, and delete their own document.
    // Admins (with custom claim isAdmin=true) can read and write any user document.
    match /users/{userId} {
      // Allow user to create their own document (e.g., during signup/profile completion)
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow user to read, update, delete their own document
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      
      // Allow admins (identified by a custom claim 'isAdmin') to read/write any user document
      // Ensure you are setting this custom claim for your admin users via Firebase Admin SDK.
      allow read, write: if request.auth != null && request.auth.token.isAdmin == true;
    }

    // PAPERS collection
    // Authenticated users can create new papers.
    // The owner of the paper (document's userId field matches auth.uid) can read, update, delete.
    // Admins (with custom claim isAdmin=true) can read, update, delete any paper.
    match /papers/{paperId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && 
                                      ( (resource.data.userId == request.auth.uid) || 
                                        (request.auth.token.isAdmin == true) );
    }

    // Add rules for other collections as your application grows.
    // For example:
    // match /publicInfo/{docId} {
    //   allow read: if true; // Allow public read access
    // }

    // IMPORTANT: Default deny all access to any other path not explicitly matched above.
    // This ensures that if you forget to add a rule for a new collection,
    // it's not accidentally left open to unauthorized access.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
